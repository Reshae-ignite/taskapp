{"version":3,"sources":["util/firebase.js","components/GoogleSignin.js","components/GoogleSignup.js","components/Forms.js","components/Task.js","components/Tasklist.js","components/NavBar.js","pages/List.js","components/SignIn.js","pages/Home.js","components/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","GoogleSignin","responseGoogle","response","console","log","clientId","buttonText","onSuccess","onFailure","cookiePolicy","GoogleSignup","Forms","useState","title","setTitle","className","type","onChange","e","target","value","TextField","id","label","variant","color","onClick","taskRef","database","ref","task","complete","push","Task","class","child","remove","update","TaskList","taskList","setTaskList","useEffect","dgdfabbatabase","on","snapshot","tasks","val","List","ListItem","ListItemText","primary","map","index","key","NavBar","handleLogout","Navbar","bg","Nav","Link","SignIn","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearErrors","authListener","onAuthStateChanged","signOut","handleSignIn","signInWithEmailAndPassword","catch","err","code","message","massage","handleSignUp","createUserWithEmailAndPassword","Card","body","Form","Group","controlId","Label","Control","placeholder","Text","autoFocus","required","Button","href","Home","SignUp","props","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error"],"mappings":"uMAeOA,G,cAAOC,IAASC,cAXA,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAOFV,GAHGC,IAASU,OACJV,IAASW,YAEjBZ,G,yBCfF,SAASa,IAClB,IAAMC,EAAiB,SAACC,GAC5BC,QAAQC,IAAIF,IAEb,OACC,6BACO,kBAAC,IAAD,CACLG,SAAS,2EACTC,WAAW,mBACXC,UAAWN,EACXO,UAAWP,EACXQ,aAAc,wBCXH,SAASC,IAClB,IAAMT,EAAiB,SAACC,GAC5BC,QAAQC,IAAIF,IAEb,OACC,6BACO,kBAAC,IAAD,CACLG,SAAS,2EACTC,WAAW,eACXC,UAAWN,EACXO,UAAWP,EACXQ,aAAc,wB,iDCTH,SAASE,IAAS,IAAD,EAEHC,mBAAS,IAFN,mBAErBC,EAFqB,KAEfC,EAFe,KAe5B,OACI,yBAAKC,UAAU,QACX,0BAAMC,KAAK,OAAOC,SAdH,SAACC,GACpBJ,EAASI,EAAEC,OAAOC,QAa8BA,MAAOP,GAAO,kBAACQ,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,OAAOC,QAAQ,cAC9G,kBAAC,IAAD,CAAQA,QAAQ,YAAYC,MAAM,UAAUC,QAZjC,WACf,IAAMC,EAAUvC,EAASwC,WAAWC,IAAI,QAClCC,EAAO,CACTjB,QACAkB,UAAU,GAGdJ,EAAQK,KAAKF,KAKT,gB,YCpBG,SAASG,EAAT,GAAuB,IAARH,EAAO,EAAPA,KAW7B,OACC,6BACC,wBAAII,MAAOJ,EAAKC,SAAW,WAAY,IAAKD,EAAKjB,OACxC,kBAAC,IAAD,CAAQW,QAAQ,YAAYC,MAAM,YAAYC,QAbpC,WACEvC,EAAKyC,WAAWC,IAAI,QAAQM,MAAML,EAAKR,IAC/Cc,WAWJ,UACA,kBAAC,IAAD,CAAQZ,QAAQ,YAAYT,UAAU,cAAcW,QAVxC,WACAvC,EAAKyC,WAAWC,IAAI,QAAQM,MAAML,EAAKR,IAC/Ce,OAAO,CACXN,UAAWD,EAAKC,aAOhB,a,+BCVG,SAASO,IAAW,IAAD,EAEE1B,qBAFF,mBAEvB2B,EAFuB,KAEbC,EAFa,KAgBjC,OAbGC,qBAAU,WACUtD,EAAKuD,iBAAiBb,IAAI,QAClCc,GAAG,SAAS,SAACC,GACrB,IAAMC,EAAQD,EAASE,MACjBP,EAAW,GACjB,IAAK,IAAIjB,KAAMuB,EACXN,EAASP,KAAT,aAAeV,MAAMuB,EAAMvB,KAE/BnB,QAAQC,IAAImC,GACZC,EAAYD,QAEb,IAGC,yBAAKxB,UAAU,QACf,kBAACgC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACD,kBAACC,EAAA,EAAD,CAAcC,QAAUX,EACrBA,EAASY,KAAI,SAACrB,EAAKsB,GAAN,OAAe,kBAACnB,EAAD,CAAMH,KAAMA,EAAMuB,IAAKD,OAClD,Q,sBC1BI,SAASE,EAAT,GAAiC,IAAhBC,EAAe,EAAfA,aAC/B,OACC,6BACU,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOjC,QAAQ,QAEtB,kBAACkC,EAAA,EAAD,CAAK3C,UAAU,WACX,kBAAC2C,EAAA,EAAIC,KAAL,CAAUjC,QAAS6B,GAAnB,aCLL,SAASR,IACvB,OACC,6BACM,kBAACO,EAAD,MACA,kBAAC3C,EAAD,MACA,kBAAC,EAAD,OCHO,SAASiD,IAAU,IAAD,EACLhD,mBAAS,IADJ,mBACtBiD,EADsB,KAChBC,EADgB,OAEHlD,mBAAS,IAFN,mBAEtBmD,EAFsB,KAEfC,EAFe,OAGGpD,mBAAS,IAHZ,mBAGtBqD,EAHsB,KAGZC,EAHY,OAIOtD,mBAAS,IAJhB,mBAItBuD,EAJsB,KAIVC,EAJU,OAKaxD,mBAAS,IALtB,mBAKtByD,EALsB,KAKPC,EALO,OAMO1D,oBAAS,GANhB,mBAMtB2D,EANsB,KAMVC,EANU,KAYtBC,EAAc,WACjBL,EAAc,IACdE,EAAiB,KA0CjBI,EAAe,WACfvF,EAAKW,OAAO6E,oBAAmB,SAACd,GACzBA,GAjDPG,EAAS,IACTE,EAAY,IAkDJJ,EAAQD,IAEXC,EAAQ,QASpB,OAJGrB,qBAAU,WACNiC,MACD,IAGH,6BACC,wCACEb,EACC,kBAAC,EAAD,CAAMN,aAzCU,WAChBpE,EAAKW,OAAO8E,aA0CZ,kBAAChB,EAAD,CACAG,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbW,aA5CiB,WACrBJ,IACAtF,EACCW,OACAgF,2BAA2Bf,EAAOE,GAClCc,OAAM,SAACC,GACJ,OAAOA,EAAIC,MACX,IAAK,qBACL,IAAK,qBACL,IAAK,sBACDb,EAAcY,EAAIE,SAClB,MACJ,IAAK,sBACDZ,EAAiBU,EAAIG,cAgCzBC,aAlEiB,WACnBX,IACFtF,EACCW,OACAuF,+BAA+BtB,EAAOE,GACtCc,OAAM,SAACC,GACJ,OAAOA,EAAIC,MACX,IAAK,4BACL,IAAK,qBACDb,EAAcY,EAAIE,SAClB,MACJ,IAAK,qBACDZ,EAAiBU,EAAIG,cAuDzBZ,WAAYA,EACZC,cAAeA,EACfL,WAAYA,EACZE,cAAeA,IAGnB,kBAACiB,EAAA,EAAD,CAAMC,MAAI,EAACxE,UAAU,WAEjB,kBAACyE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc5E,KAAK,QAAQ6E,YAAY,gBACvC,kBAACL,EAAA,EAAKM,KAAN,CACA/E,UAAU,aACVgF,WAAS,EACTC,UAAQ,EACR5E,MAAO2C,EACP9C,SAAW,SAACC,GAAD,OAAO8C,EAAS9C,EAAEC,OAAOC,SALpC,kDASA,uBAAGL,UAAU,YAAYoD,IAG7B,kBAACqB,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc5E,KAAK,WAAW6E,YAAY,aAC1C,kBAACL,EAAA,EAAKM,KAAN,CACA/E,UAAU,aACVgF,WAAS,EACTC,UAAQ,EACR5E,MAAO6C,EACPhD,SAAW,SAACC,GAAD,OAAOgD,EAAYhD,EAAEC,OAAOC,UAEvC,uBAAGL,UAAU,YAAYsD,IAI9B,yBAAKtD,UAAU,WACf,kBAACkF,EAAA,EAAD,CAAQzE,QAAQ,UAAUR,KAAK,UAA/B,WAGE,kBAAChB,EAAD,OAGD,sDAA2B,uBAAGkG,KAAK,WAAR,gBCnIxB,SAASC,IAEvB,OACO,6BACA,kBAACvC,EAAD,OCLO,SAASwC,EAAOC,GAUNA,EATVtC,MASUsC,EARjBrC,SAQiBqC,EAPjBpC,SAOiBoC,EANjBnC,YAMiBmC,EALjBxB,aAKiBwB,EAJjBjB,aAIiBiB,EAHjB9B,WAGiB8B,EAFjB7B,cAEiB6B,EADjBlC,WACiBkC,EAAjBhC,cAEP,OACC,6BACE,wCACA,kBAACiB,EAAA,EAAD,CAAMC,MAAI,EAACxE,UAAU,WAEjB,kBAACyE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc5E,KAAK,QAAQ6E,YAAY,gBACvC,kBAACL,EAAA,EAAKM,KAAN,CAAW/E,UAAU,cAArB,mDAKJ,kBAACyE,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc5E,KAAK,WAAW6E,YAAY,cAE9C,yBAAK9E,UAAU,WACf,kBAACkF,EAAA,EAAD,CAAQzE,QAAQ,UAAUR,KAAK,UAA/B,WAGC,kBAACN,EAAD,QAGD,gDAAqB,uBAAGwF,KAAK,WAAR,gBCAlBI,MAzBf,WAKC,OACG,6BAEI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IAC9B,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,UAAUC,UAAWL,IACvC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAUC,UAAW7C,IACvC,kBAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,QAAQC,UAAW1D,QClB7B2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SD0HnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEd1C,OAAM,SAAA2C,GACLvH,QAAQuH,MAAMA,EAAMxC,a","file":"static/js/main.1291308c.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAp4Ce9RZ9wv0gKBItcbkriA3TvZjdJGtY\",\n    authDomain: \"tasklist-290920.firebaseapp.com\",\n    databaseURL: \"https://tasklist-290920.firebaseio.com\",\n    projectId: \"tasklist-290920\",\n    storageBucket: \"tasklist-290920.appspot.com\",\n    messagingSenderId: \"362411408273\",\n    appId: \"1:362411408273:web:c17917d712a8369f7e3830\",\n    measurementId: \"G-KX9XYY1V5X\"\n  };\n\n const fire = firebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n  export default fire;","import React from \"react\";\nimport GoogleLogin from 'react-google-login';\n\n\nexport default function GoogleSignin() {\n      const responseGoogle = (response) => {\n  console.log(response);\n}\n\treturn (\n\t\t<div>\n         <GoogleLogin\n    clientId=\"362411408273-jb3ltl9ds6ol8rn01a9ir14tbjjsqs4a.apps.googleusercontent.com\"\n    buttonText=\"Login with Gmail\"\n    onSuccess={responseGoogle}\n    onFailure={responseGoogle}\n    cookiePolicy={'single_host_origin'}\n  />\n  \n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport GoogleLogin from 'react-google-login';\n\n\nexport default function GoogleSignup() {\n      const responseGoogle = (response) => {\n  console.log(response);\n}\n\treturn (\n\t\t<div>\n         <GoogleLogin\n    clientId=\"362411408273-jb3ltl9ds6ol8rn01a9ir14tbjjsqs4a.apps.googleusercontent.com\"\n    buttonText=\"Gmail Signup\"\n    onSuccess={responseGoogle}\n    onFailure={responseGoogle}\n    cookiePolicy={'single_host_origin'}\n  />\n  \n\t\t</div>\n\t);\n}\n","import React, {useState} from 'react';\nimport firebase from '../util/firebase';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport \"../App.css\";\n\nexport default function Forms() {\n\n    const [title,setTitle] = useState('');\n    const handleOnChange = (e) =>{\n        setTitle(e.target.value);\n    };\n    const createTask = () => { \n        const taskRef = firebase.database().ref('Task');\n        const task = {\n            title,\n            complete: false,\n        };\n\n        taskRef.push(task);\n    };\n    return (\n        <div className='form'>\n            <form type='text' onChange={handleOnChange} value={title}><TextField id=\"outlined-basic\" label=\"Task\" variant=\"outlined\" /></form>\n            <Button variant=\"contained\" color=\"primary\" onClick={createTask}>Add To List</Button>\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport fire from '../util/firebase';\n\nexport default function Task({task}) {\n    const deleteTask= () => {\n        const taskRef = fire.database().ref('Task').child(task.id);\n        taskRef.remove();\n    }\n    const completeTask= () => {\n        const taskRef = fire.database().ref('Task').child(task.id);\n        taskRef.update({\n            complete: !task.complete, \n        });\n    }\n\treturn (\n\t\t<div>\n\t\t\t<h1 class={task.complete ? \"complete\": \"\"}>{task.title}</h1>\n            <Button variant=\"contained\" color=\"secondary\" onClick={deleteTask}>Delete</Button>\n            <Button variant=\"contained\" className=\"completebtn\" onClick={completeTask}>Complete</Button>\n\t\t</div>\n\t)\n};\n","import React,  {useEffect, useState} from 'react';\nimport fire from '../util/firebase'; \nimport \"../App.css\";\nimport Task from './Task';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nexport default function TaskList(){\n\n    const [taskList, setTaskList] = useState();\n    useEffect(()=>{\n        const taskRef = fire.dgdfabbatabase().ref('Task');\n        taskRef.on('value', (snapshot)=> {\n        const tasks = snapshot.val();\n        const taskList = [];\n        for (let id in tasks){\n            taskList.push({id,...tasks[id]})\n        };\n        console.log(taskList)\n        setTaskList(taskList);\n        });\n    }, []);\n \n return (\n        <div className=\"list\" >\n        <List>\n        <ListItem>\n       <ListItemText primary= {taskList \n        ? taskList.map((task,index)=> <Task task={task} key={index} />)\n         : ''}/>\n         </ListItem>\n         </List>\n        </div>\n       )\n}","import React from \"react\";\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport Logout from './Logout';\nimport SignIn from './SignIn';\n\nexport default function NavBar({handleLogout}) {\n\treturn (\n\t\t<div >\n            <Navbar bg=\"dark\" variant=\"dark\">\n    \n                <Nav className=\"mr-auto\">\n                    <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n                \n                </Nav>\n   \n            </Navbar>\n\t\t</div>\n\t);\n}","import React from \"react\";\nimport Forms from '../components/Forms';\nimport Tasklist from '../components/Tasklist';\nimport {Button} from \"react-bootstrap\";\nimport NavBar from '../components/NavBar';\n\nexport default function List() {\n\treturn (\n\t\t<div >\n        <NavBar/>\n        <Forms/>\n        <Tasklist />\n        \n\t\t</div>\n\t);\n}\n\n","import React, {useState, useEffect} from \"react\";\nimport GoogleSignin from \"../components/GoogleSignin\";\nimport GoogleSignup from '../components/GoogleSignup'\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport List from '../pages/List';\n\nimport fire from '../util/firebase';\n\nexport default function SignIn() {\n    const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n  \n  const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    }\n     const clearErrors = () =>{\n        setEmailError('');\n        setPasswordError('')\n    }\n\n    const handleSignUp = () => {\n      clearErrors();\n    fire\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .catch((err) => {\n        switch(err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invaild-email\": \n            setEmailError(err.message);\n            break;\n        case \"auth/weak-password\":\n            setPasswordError(err.massage);\n            break\n        }\n        });\n  };\n   const handleLogout = () => {\n        fire.auth().signOut();\n    };\n\n    const handleSignIn = () => {\n    clearErrors();\n    fire\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((err) => {\n        switch(err.code){\n        case \"auth/invaild-email\": \n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n        case \"auth/wrong-password\":\n            setPasswordError(err.massage);\n            break\n        }\n        });\n  };\n  const authListener = () =>{\n        fire.auth().onAuthStateChanged((user) => {\n            if(user){\n                clearInputs();\n                setUser(user);\n            }else{\n             setUser(\"\");\n            }\n        });\n        \n    };\n    useEffect(() => {\n        authListener();\n    }, []);\n\n\treturn (\n    <div > \n     <h1>Sign In!</h1> \n      {user ? (\n        <List handleLogout={handleLogout}/>\n        ):(\n        <SignIn\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleSignIn={handleSignIn}\n        handleSignUp={handleSignUp}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n        /> \n        )}\n    <Card body className=\"logform\" > \n    \n        <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text \n                className=\"text-muted\" \n                autoFocus \n                required\n                value={email}\n                onChange= {(e) => setEmail(e.target.value)}\n                >\n                We'll never share your email with anyone else.\n                </Form.Text>\n                <p className=\"errorMsg\">{emailError}</p>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n                <Form.Text \n                className=\"text-muted\" \n                autoFocus \n                required\n                value={password}\n                onChange= {(e) => setPassword(e.target.value)}\n                />\n                <p className=\"errorMsg\">{passwordError}</p>\n            </Form.Group>\n            \n\n           <div className=\"signbtn\">\n           <Button variant=\"primary\" type=\"submit\">\n                Sign In\n            </Button>\n             <GoogleSignin/>\n            \n            </div>\n            <p>Don't have an account?  <a href=\"/signup\"> Sign up</a></p>\n            </Form>\n\n\t\t</Card>\n      </div>\n\t)\n}\n","import React, {useState, useEffect} from \"react\";\nimport fire from '../util/firebase';\nimport SignIn from '../components/SignIn'\nimport { Card, Container} from \"react-bootstrap\";\nimport List from './List'\n\nexport default function Home() {\n\n\treturn (\n        <div>\n        <SignIn/>\n        </div>\n    )\n}\n//  <Card className=\"text-center\">\n//         <Card.Header><h1>Welcome to Task List!</h1></Card.Header>\n//         <Card.Body>\n//             <Card.Title>Login or Sign Up Below!</Card.Title>\n//             <Card.Link href=\"/signin\">Sign In</Card.Link>\n//             <Card.Link href=\"/signup\">Sign Up</Card.Link>\n            \n//         </Card.Body>\n        \n//         </Card>","import React from \"react\";\nimport {Form, Button, Card } from \"react-bootstrap\";\nimport GoogleSignup from \"../components/GoogleSignup\";\n\n\nexport default function SignUp(props) {\n        const {email,\n        setEmail,\n        password,\n        setPassword,\n        handleSignIn,\n        handleSignUp,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError} = props;\n\n\treturn (\n\t\t<div > \n    <h1>Sign Up!</h1> \n    <Card body className=\"logform\" > \n    \n        <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <div className=\"signbtn\">\n            <Button variant=\"primary\" type=\"submit\">\n                Sign Up\n            </Button>\n             <GoogleSignup/>\n             </div>\n            </Form>\n            <p>Have an account?  <a href=\"/signin\" >  Sign In</a></p>\n\t\t</Card>\n\n\n      </div>\n\t)\n}\n\n","import React, {useState, useEffect} from \"react\";\nimport 'materialize-css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nimport Home from \"./pages/Home\";\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport List from './pages/List';\n\n\n\nfunction App() {\n\n \n\n  \n return(\n    <div>\n           \n        <Router>\n        <Switch>\n        \t<Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/signin\" component={SignIn} />\n            <Route exact path=\"/list\" component={List} />\n        </Switch>\n        </Router>\n        \n       \n\n    </div>\n\n        );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}