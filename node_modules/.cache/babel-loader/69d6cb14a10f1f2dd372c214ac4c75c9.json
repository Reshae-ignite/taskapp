{"ast":null,"code":"var _jsxFileName = \"/home/ralagbada/cloudshell_open/tasklist/src/pages/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from '../util/firebase';\nimport SignIn from '../components/SignIn';\nimport Logout from '../components/Logout';\nimport { Card, Container } from \"react-bootstrap\";\nexport default function Home() {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    firebase.auth().createUserInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invaild-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.massage);\n          break;\n      }\n    });\n  };\n\n  const handleSignIn = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invaild-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.massage);\n          break;\n      }\n    });\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homeCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, user ? /*#__PURE__*/React.createElement(Logout, {\n    h: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(SignIn, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    handleSignIn: handleSignIn,\n    handleSignUp: handleSignUp,\n    hasAccount: hasAccount,\n    setHasAccount: setHasAccount,\n    emailError: emailError,\n    passwordError: passwordError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })));\n} //  <Card className=\"text-center\">\n//         <Card.Header><h1>Welcome to Task List!</h1></Card.Header>\n//         <Card.Body>\n//             <Card.Title>Login or Sign Up Below!</Card.Title>\n//             <Card.Link href=\"/signin\">Sign In</Card.Link>\n//             <Card.Link href=\"/signup\">Sign Up</Card.Link>\n//         </Card.Body>\n//         </Card>","map":{"version":3,"sources":["/home/ralagbada/cloudshell_open/tasklist/src/pages/Home.js"],"names":["React","useState","useEffect","firebase","SignIn","Logout","Card","Container","Home","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearInputs","clearErrors","handleSignUp","auth","createUserInWithEmailAndPassword","catch","err","code","message","massage","handleSignIn","signInWithEmailAndPassword","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport firebase from '../util/firebase';\nimport SignIn from '../components/SignIn'\nimport Logout from '../components/Logout'\nimport { Card, Container} from \"react-bootstrap\";\n\n\nexport default function Home() {\n   const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n  \n  const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    }\n    \n    const clearErrors = () =>{\n        setEmailError('');\n        setPasswordError('')\n    }\n \n\n  const handleSignUp = () => {\n      clearErrors();\n    firebase\n    .auth()\n    .createUserInWithEmailAndPassword(email, password)\n    .catch((err) => {\n        switch(err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invaild-email\": \n            setEmailError(err.message);\n            break;\n        case \"auth/weak-password\":\n            setPasswordError(err.massage);\n            break\n        }\n        });\n  };\n\n   const handleSignIn = () => {\n    clearErrors();\n    firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((err) => {\n        switch(err.code){\n        case \"auth/invaild-email\": \n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n        case \"auth/wrong-password\":\n            setPasswordError(err.massage);\n            break\n        }\n        });\n  };\n  \n\n    const authListener = () =>{\n        firebase.auth().onAuthStateChanged((user) => {\n            if(user){\n                clearInputs();\n                setUser(user);\n            }else{\n             setUser(\"\");\n            }\n        });\n        \n    };\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    \n\treturn (\n        <Container>\n            <div className=\"homeCard\">\n            {user ? (<Logout h/>): (\n            <SignIn\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleSignIn={handleSignIn}\n        handleSignUp={handleSignUp}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n        /> )}\n               \n\n       \n            </div>\n        </Container>\n\t);\n}\n//  <Card className=\"text-center\">\n//         <Card.Header><h1>Welcome to Task List!</h1></Card.Header>\n//         <Card.Body>\n//             <Card.Title>Login or Sign Up Below!</Card.Title>\n//             <Card.Link href=\"/signin\">Sign In</Card.Link>\n//             <Card.Link href=\"/signup\">Sign Up</Card.Link>\n            \n//         </Card.Body>\n        \n//         </Card>"]},"metadata":{},"sourceType":"module"}