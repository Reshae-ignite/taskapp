{"ast":null,"code":"var _jsxFileName = \"/home/ralagbada/cloudshell_open/tasklist/src/components/Tasklist.js\";\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase';\nimport Task from './Task';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nexport default function TaskList() {\n  const [taskList, setTaskList] = useState();\n  useEffect(() => {\n    const taskRef = firebase.database().ref('Task');\n    taskRef.on('value', snapshot => {\n      const tasks = snapshot.val();\n      const taskList = [];\n\n      for (let id in tasks) {\n        taskList.push({\n          id,\n          ...tasks[id]\n        });\n      }\n\n      ;\n      console.log(taskList);\n      setTaskList(taskList);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: taskList ? taskList.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n      task: task,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }\n    })) : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/ralagbada/cloudshell_open/tasklist/src/components/Tasklist.js"],"names":["React","useEffect","useState","firebase","Task","List","ListItem","ListItemText","TaskList","taskList","setTaskList","taskRef","database","ref","on","snapshot","tasks","val","id","push","console","log","map","task","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAGA,eAAe,SAASC,QAAT,GAAmB;AAE9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,OAAO,GAAGR,QAAQ,CAACS,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAqBC,QAAD,IAAa;AACjC,YAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd;AACA,YAAMR,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAIS,EAAT,IAAeF,KAAf,EAAqB;AACjBP,QAAAA,QAAQ,CAACU,IAAT,CAAc;AAACD,UAAAA,EAAD;AAAI,aAAGF,KAAK,CAACE,EAAD;AAAZ,SAAd;AACH;;AAAA;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACC,KARD;AASH,GAXQ,EAWN,EAXM,CAAT;AAaH,sBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAGA,QAAQ,GAC7BA,QAAQ,CAACa,GAAT,CAAa,CAACC,IAAD,EAAMC,KAAN,kBAAe,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,GAAG,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAD6B,GAE5B,EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADA,CADA,CADP;AAWA","sourcesContent":["import React,  {useEffect, useState} from 'react';\nimport firebase from '../util/firebase'; \nimport Task from './Task';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nexport default function TaskList(){\n\n    const [taskList, setTaskList] = useState();\n    useEffect(()=>{\n        const taskRef = firebase.database().ref('Task');\n        taskRef.on('value', (snapshot)=> {\n        const tasks = snapshot.val();\n        const taskList = [];\n        for (let id in tasks){\n            taskList.push({id,...tasks[id]})\n        };\n        console.log(taskList)\n        setTaskList(taskList);\n        });\n    }, []);\n \n return (\n        <div >\n        <List>\n        <ListItem>\n       <ListItemText primary= {taskList \n        ? taskList.map((task,index)=> <Task task={task} key={index} />)\n         : ''}/>\n         </ListItem>\n         </List>\n        </div>\n       )\n}"]},"metadata":{},"sourceType":"module"}