{"ast":null,"code":"var _jsxFileName = \"/home/ralagbada/cloudshell_open/tasklist/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport 'materialize-css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport fire from './util/fire';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport List from './pages/List';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    fire.auth().createUserInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invaild-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.massage);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const handleSignIn = () => {\n    clearErrors();\n    fire.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invaild-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.massage);\n          break;\n      }\n    });\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), user ? /*#__PURE__*/React.createElement(List, {\n    handleLogout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(SignIn, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    handleSignIn: handleSignIn,\n    handleSignUp: handleSignUp,\n    hasAccount: hasAccount,\n    setHasAccount: setHasAccount,\n    emailError: emailError,\n    passwordError: passwordError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ralagbada/cloudshell_open/tasklist/src/App.js"],"names":["React","useState","useEffect","fire","BrowserRouter","Router","Route","Switch","Home","NavBar","SignUp","SignIn","List","App","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearInputs","clearErrors","handleSignUp","auth","createUserInWithEmailAndPassword","catch","err","code","message","massage","handleLogout","signOut","handleSignIn","signInWithEmailAndPassword","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport 'materialize-css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport fire from './util/fire';\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nimport Home from \"./pages/Home\";\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport List from './pages/List';\n\n\n\nfunction App() {\nconst [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n  \n  const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    }\n     const clearErrors = () =>{\n        setEmailError('');\n        setPasswordError('')\n    }\n \n\n  const handleSignUp = () => {\n      clearErrors();\n    fire\n    .auth()\n    .createUserInWithEmailAndPassword(email, password)\n    .catch((err) => {\n        switch(err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invaild-email\": \n            setEmailError(err.message);\n            break;\n        case \"auth/weak-password\":\n            setPasswordError(err.massage);\n            break\n        }\n        });\n  };\n   const handleLogout = () => {\n        fire.auth().signOut();\n    };\n\n    const handleSignIn = () => {\n    clearErrors();\n    fire\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((err) => {\n        switch(err.code){\n        case \"auth/invaild-email\": \n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n        case \"auth/wrong-password\":\n            setPasswordError(err.massage);\n            break\n        }\n        });\n  };\n  const authListener = () =>{\n        fire.auth().onAuthStateChanged((user) => {\n            if(user){\n                clearInputs();\n                setUser(user);\n            }else{\n             setUser(\"\");\n            }\n        });\n        \n    };\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    \n return(\n    <div>\n    \n        <NavBar/>\n           \n    \n        \n        {user ? (\n        <List handleLogout={handleLogout}/>\n        ):(\n        <SignIn\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleSignIn={handleSignIn}\n        handleSignUp={handleSignUp}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n        /> \n        )}\n\n    </div>\n\n        );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}